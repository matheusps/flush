{"componentChunkName":"component---src-layout-docs-tsx","path":"/theming/","result":{"pageContext":{"id":"bf986aab-6461-54b6-9f33-1dc514e9e315","frontmatter":{"path":"/theming/","title":"Theming"},"mdxBody":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Theming\",\n  \"path\": \"/theming/\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"theming\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#theming\",\n    \"aria-label\": \"theming permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\")), \"Theming\"), mdx(\"h2\", {\n    \"id\": \"global-theming\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#global-theming\",\n    \"aria-label\": \"global theming permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\")), \"Global theming\"), mdx(\"p\", null, \"Bumbag can be extensively themed to meet your requirements. You can either \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"override the default Bumbag theme\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"create your own custom theme\"), \" from scratch. If you like the default theme and want to keep it simple, we recommend you just override the default.\"), mdx(\"h3\", {\n    \"id\": \"overriding-the-default-global-theme-recommended\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#overriding-the-default-global-theme-recommended\",\n    \"aria-label\": \"overriding the default global theme recommended permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\")), \"Overriding the default global theme (recommended)\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ThemeProvider>\"), \" component accepts \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme\"), \" as a prop, where you can specify overrides to the default Bumbag theme. The schema of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme\"), \" object can be seen \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#theme-schema\"\n  }), \"here\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { Provider as BumbagProvider, css } from 'bumbag'\\n\\nconst theme = {\\n  global: {\\n    fontSize: 18,\\n    styles: {\\n      base: css`\\n        html,\\n        body {\\n          background-color: hotpink;\\n          color: white;\\n        }\\n      `,\\n    },\\n  },\\n  fonts: {\\n    default: 'Comic Sans MS',\\n  },\\n  palette: {\\n    primary: 'blue',\\n  },\\n  breakpoints: {\\n    mobile: 520,\\n    tablet: 960,\\n  },\\n  Button: {\\n    defaultProps: {\\n      palette: 'primary',\\n    },\\n  },\\n  Heading: {\\n    styles: {\\n      base: {\\n        color: 'primary',\\n      },\\n    },\\n  },\\n}\\n\\nconst App = () => <BumbagProvider theme={theme}>// ... your app</BumbagProvider>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","type":"docs"}},"staticQueryHashes":[]}